version: 2.1

jobs:
  audit:
    docker:
      - image: node:12.18.1
    steps:
      - checkout
      - run:
          name: Audit frontend packages
          command: |
            cd frontend
            npm audit --audit-level=critical
      - run:
          name: Audit backend packages
          command: |
            cd backend
            npm audit --audit-level=critical
  frontend:
    docker:
      - image: node:12.18.1
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Test app
          command: |
            cd frontend
            npm run test
      - run:
          name: Build app
          command: |
            cd frontend
            npm run build
  backend:
    docker:
      - image: node:12.18.1
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd backend
            npm install
      - run:
          name: Build app
          command: |
            cd backend
            npm run build
      - run:
          name: Test app
          command: |
            cd backend
            npm run test
  deploy_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy network
          command: |
            aws cloudformation deploy \
              --template-file .circleci/network.yml \
              --stack-name udapeople-stack-network
      - run:
          name: Deploy cloudfront
          command: |
            aws cloudformation deploy \
              --template-file .circleci/cloudfront.yml \
              --stack-name udapeople-stack-cloudfront
      - run:
          name: Deploy backend
          command: |
            aws cloudformation deploy \
              --template-file .circleci/backend.yml \
              --stack-name udapeople-stack-backend
      - run:
          name: Deploy frontend
          command: |
            aws cloudformation deploy \
              --template-file .circleci/frontend.yml \
              --stack-name udapeople-stack-frontend
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    shell: /bin/sh -leo pipefail
    environment:
      - BASH_ENV: /etc/profile
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["21:19:c0:15:0f:12:94:29:80:f0:01:51:c2:b3:e8:97"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            echo ENVIRONMENT=production > "backend/.env"
            echo TYPEORM_CONNECTION=postgres > "backend/.env"
            echo TYPEORM_MIGRATIONS_DIR=./src/migrations > "backend/.env"
            echo TYPEORM_ENTITIES=./src/modules/domain/**/*.entity.ts > "backend/.env"
            echo TYPEORM_MIGRATIONS=./src/migrations/*.ts > "backend/.env"
            echo TYPEORM_HOST=$TYPEORM_HOST > "backend/.env"
            echo TYPEORM_PORT=$TYPEORM_PORT > "backend/.env"
            echo TYPEORM_USERNAME=$TYPEORM_USERNAME > "backend/.env"
            echo TYPEORM_PASSWORD=$TYPEORM_PASSWORD > "backend/.env"
            echo TYPEORM_DATABASE=$TYPEORM_DATABASE > "backend/.env"

            printenv >> "backend/.env"
            cd .circleci/ansible
            ansible-playbook -i inventory.txt playbook.yml
workflows:
  default:
    jobs:
      - configure_infrastructure
